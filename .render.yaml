services:
  - type: web
    name: fra-atlas-frontend
    env: node
    buildCommand: |
      npm install
      npm run build:css
    startCommand: npm run start
    envVars:
      - key: OCR_API_URL
        scope: public
        value: ""  # Leave blank for now; update after backend deploys
    routes:
      - type: rewrite
        source: /api/*
        destination: https://fra-ocr-api.onrender.com/api/$1 # use actual backend URL after deployment
      - type: rewrite
        source: /*
        destination: /index.html
    publishDir: .

  - type: web
    name: fra-ocr-api
    env: python
    pythonVersion: 3.11
    buildCommand: |
      apt-get update
      apt-get install -y tesseract-ocr libtesseract-dev poppler-utils libjpeg-dev zlib1g-dev libtiff-dev libfreetype6-dev
      pip install --upgrade pip
      pip install -r OCR/requirements.txt
    startCommand: cd OCR && gunicorn --bind 0.0.0.0:$PORT flask_ocr_api:app
    envVars:
      - key: GEMINI_API_KEY
        sync: false
