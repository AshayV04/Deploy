services:
  - type: web
    name: fra-atlas-frontend
    env: node
    buildCommand: |
      npm install
      npm run build:css
    startCommand: serve -s .    # or use your frontend server command, eg. `npm start` or `serve`
    publishDir: .
    routes:
      - type: rewrite
        source: /api/*
        destination: https://fra-ocr-api.onrender.com/api/$1
      - type: rewrite
        source: /*
        destination: /index.html

  - type: web
    name: fra-ocr-api
    env: python
    buildCommand: |
      apt-get update
      apt-get install -y tesseract-ocr libtesseract-dev poppler-utils
      pip install --upgrade pip
      pip install -r OCR/requirements.txt
    startCommand: cd OCR && gunicorn --bind 0.0.0.0:$PORT flask_ocr_api:app
    envVars:
      - key: GEMINI_API_KEY
        sync: false
      - key: GEMINI_MODEL
        value: gemini-2.0-flash
      - key: DB_FILE
        value: /tmp/fra_claims.db
